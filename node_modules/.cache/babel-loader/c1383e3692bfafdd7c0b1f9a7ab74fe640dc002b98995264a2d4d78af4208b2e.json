{"ast":null,"code":"var _jsxFileName = \"D:\\\\reacttutorial\\\\todo\\\\src\\\\advanceHooks\\\\buttons.jsx\",\n  _s = $RefreshSig$();\nimport React, { useMemo } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Buttons = ({}) => {\n  _s();\n  const increment = () => {\n    setCount(count + 1);\n    findElement();\n  };\n  const numbers = useMemo(() => {\n    console.log(\"High Computation array\");\n    return Array.from({\n      length: 100000000\n    }, (_, i) => i + 1);\n  }, []);\n  const findElement = () => {\n    const target = 99999999;\n    // Use indexOf to find the element\n    const index = numbers.indexOf(target);\n    if (index !== -1) {\n      console.log(`Element ${target} found at index ${index}`);\n    } else {\n      console.log(`Element ${target} not found`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: increment,\n    children: \"Increment\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_s(Buttons, \"HiGt+lsGyqkN/5wA627WSuP1PfE=\");\n_c = Buttons;\nexport default _c2 = /*#__PURE__*/React.memo(Buttons);\nvar _c, _c2;\n$RefreshReg$(_c, \"Buttons\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useMemo","jsxDEV","_jsxDEV","Buttons","_s","increment","setCount","count","findElement","numbers","console","log","Array","from","length","_","i","target","index","indexOf","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","_c2","memo","$RefreshReg$"],"sources":["D:/reacttutorial/todo/src/advanceHooks/buttons.jsx"],"sourcesContent":["import React, { useMemo } from 'react'\r\n\r\nconst Buttons = ({}) => {\r\n    const increment = () => {\r\n        setCount(count+1);\r\n        findElement();\r\n    }\r\n    const numbers = useMemo(()=>{\r\n        console.log(\"High Computation array\");\r\n        return Array.from({ length: 100_000_000 }, (_, i) => i + 1)\r\n    },[]);\r\n    \r\n        const findElement = () => {\r\n    \r\n            const target = 99999999;\r\n            // Use indexOf to find the element\r\n            const index = numbers.indexOf(target);\r\n          \r\n            if (index !== -1) {\r\n              console.log(`Element ${target} found at index ${index}`);\r\n            } else {\r\n              console.log(`Element ${target} not found`);\r\n            }\r\n          }\r\n    \r\n    return (\r\n        <button onClick={increment}>Increment</button>\r\n    )\r\n  }\r\n  \r\nexport default React.memo(Buttons);"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,OAAO,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,OAAO,GAAGA,CAAC,CAAC,CAAC,KAAK;EAAAC,EAAA;EACpB,MAAMC,SAAS,GAAGA,CAAA,KAAM;IACpBC,QAAQ,CAACC,KAAK,GAAC,CAAC,CAAC;IACjBC,WAAW,CAAC,CAAC;EACjB,CAAC;EACD,MAAMC,OAAO,GAAGT,OAAO,CAAC,MAAI;IACxBU,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;IACrC,OAAOC,KAAK,CAACC,IAAI,CAAC;MAAEC,MAAM,EAAE;IAAY,CAAC,EAAE,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,GAAG,CAAC,CAAC;EAC/D,CAAC,EAAC,EAAE,CAAC;EAED,MAAMR,WAAW,GAAGA,CAAA,KAAM;IAEtB,MAAMS,MAAM,GAAG,QAAQ;IACvB;IACA,MAAMC,KAAK,GAAGT,OAAO,CAACU,OAAO,CAACF,MAAM,CAAC;IAErC,IAAIC,KAAK,KAAK,CAAC,CAAC,EAAE;MAChBR,OAAO,CAACC,GAAG,CAAC,WAAWM,MAAM,mBAAmBC,KAAK,EAAE,CAAC;IAC1D,CAAC,MAAM;MACLR,OAAO,CAACC,GAAG,CAAC,WAAWM,MAAM,YAAY,CAAC;IAC5C;EACF,CAAC;EAEP,oBACIf,OAAA;IAAQkB,OAAO,EAAEf,SAAU;IAAAgB,QAAA,EAAC;EAAS;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC;AAEpD,CAAC;AAAArB,EAAA,CA1BGD,OAAO;AAAAuB,EAAA,GAAPvB,OAAO;AA4Bb,eAAAwB,GAAA,gBAAe5B,KAAK,CAAC6B,IAAI,CAACzB,OAAO,CAAC;AAAC,IAAAuB,EAAA,EAAAC,GAAA;AAAAE,YAAA,CAAAH,EAAA;AAAAG,YAAA,CAAAF,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}