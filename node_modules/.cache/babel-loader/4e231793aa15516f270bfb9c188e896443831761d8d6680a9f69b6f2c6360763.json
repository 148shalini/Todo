{"ast":null,"code":"var _jsxFileName = \"D:\\\\reacttutorial\\\\todo\\\\src\\\\advanceHooks\\\\advanceHooks.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdvanceHooks = () => {\n  _s();\n  const [count, setCount] = useState(0);\n  const numbers = Array.from({\n    length: 100000000\n  }, (_, i) => i + 1);\n  // Memoize the function to avoid unnecessary re-creations\n  const increment = () => {\n    setCount(prevCount => prevCount + 1);\n  }; // The empty array ensures the function is created once\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Count: \", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCount(count + 1),\n      children: \"Expensive Increment \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Counter, {\n      onIncrement: increment\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n_s(AdvanceHooks, \"oDgYfYHkD9Wkv4hrAPCkI/ev3YU=\");\n_c = AdvanceHooks;\nexport default AdvanceHooks;\nvar _c;\n$RefreshReg$(_c, \"AdvanceHooks\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","AdvanceHooks","_s","count","setCount","numbers","Array","from","length","_","i","increment","prevCount","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","Counter","onIncrement","_c","$RefreshReg$"],"sources":["D:/reacttutorial/todo/src/advanceHooks/advanceHooks.jsx"],"sourcesContent":["import React, { useState} from 'react';\r\n\r\n\r\n  \r\nconst AdvanceHooks = () => {\r\n    const [count, setCount] = useState(0);\r\n    const numbers = Array.from({ length: 100_000_000 }, (_, i) => i + 1);\r\n  // Memoize the function to avoid unnecessary re-creations\r\n  const increment = () => {\r\n    setCount(prevCount => prevCount + 1);\r\n  };  // The empty array ensures the function is created once\r\n\r\n  return (\r\n    <div>\r\n      <h1>Count: {count}</h1>\r\n      <button onClick={() => setCount(count + 1)}>Expensive Increment </button>\r\n      <Counter onIncrement={increment} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AdvanceHooks"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAIvC,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAMO,OAAO,GAAGC,KAAK,CAACC,IAAI,CAAC;IAAEC,MAAM,EAAE;EAAY,CAAC,EAAE,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,GAAG,CAAC,CAAC;EACtE;EACA,MAAMC,SAAS,GAAGA,CAAA,KAAM;IACtBP,QAAQ,CAACQ,SAAS,IAAIA,SAAS,GAAG,CAAC,CAAC;EACtC,CAAC,CAAC,CAAE;;EAEJ,oBACEZ,OAAA;IAAAa,QAAA,gBACEb,OAAA;MAAAa,QAAA,GAAI,SAAO,EAACV,KAAK;IAAA;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACvBjB,OAAA;MAAQkB,OAAO,EAAEA,CAAA,KAAMd,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAE;MAAAU,QAAA,EAAC;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACzEjB,OAAA,CAACmB,OAAO;MAACC,WAAW,EAAET;IAAU;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChC,CAAC;AAEV,CAAC;AAAAf,EAAA,CAfKD,YAAY;AAAAoB,EAAA,GAAZpB,YAAY;AAiBlB,eAAeA,YAAY;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}