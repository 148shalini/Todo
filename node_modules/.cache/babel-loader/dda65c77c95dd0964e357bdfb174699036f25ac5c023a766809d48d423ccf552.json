{"ast":null,"code":"var _jsxFileName = \"D:\\\\reacttutorial\\\\todo\\\\src\\\\advanceHooks\\\\advanceHooks.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdvanceHooks = () => {\n  _s();\n  const [count, setCount] = useState(0);\n  function findElement() {\n    const target = 99999999;\n\n    // Create array from 1 to 100,000,000\n    const numbers = Array.from({\n      length: 100000000\n    }, (_, i) => i + 1);\n\n    // Use indexOf to find the element\n    const index = numbers.indexOf(target);\n    if (index !== -1) {\n      console.log(`Element ${target} found at index ${index}`);\n    } else {\n      console.log(`Element ${target} not found`);\n    }\n  }\n  useEffect(() => {}, [count]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Count: \", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCount(count + 1),\n      children: \"Expensive Increment \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(AdvanceHooks, \"/xL7qdScToREtqzbt5GZ1kHtYjQ=\");\n_c = AdvanceHooks;\nexport default AdvanceHooks;\nvar _c;\n$RefreshReg$(_c, \"AdvanceHooks\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","AdvanceHooks","_s","count","setCount","findElement","target","numbers","Array","from","length","_","i","index","indexOf","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["D:/reacttutorial/todo/src/advanceHooks/advanceHooks.jsx"],"sourcesContent":["import React, { useEffect, useState} from 'react';\r\n\r\n\r\n  \r\nconst AdvanceHooks = () => {\r\n    const [count, setCount] = useState(0);\r\n    \r\n    function findElement() {\r\n        const target = 99999999;\r\n      \r\n        // Create array from 1 to 100,000,000\r\n        const numbers = Array.from({ length: 100_000_000 }, (_, i) => i + 1);\r\n      \r\n        // Use indexOf to find the element\r\n        const index = numbers.indexOf(target);\r\n      \r\n        if (index !== -1) {\r\n          console.log(`Element ${target} found at index ${index}`);\r\n        } else {\r\n          console.log(`Element ${target} not found`);\r\n        }\r\n      }\r\n    useEffect(() => {\r\n      \r\n    \r\n      \r\n    }, [count])\r\n    \r\n  return (\r\n    <div>\r\n      <h1>Count: {count}</h1>\r\n      <button onClick={() => setCount(count + 1)}>Expensive Increment </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AdvanceHooks"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAIlD,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC;EAErC,SAASO,WAAWA,CAAA,EAAG;IACnB,MAAMC,MAAM,GAAG,QAAQ;;IAEvB;IACA,MAAMC,OAAO,GAAGC,KAAK,CAACC,IAAI,CAAC;MAAEC,MAAM,EAAE;IAAY,CAAC,EAAE,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,GAAG,CAAC,CAAC;;IAEpE;IACA,MAAMC,KAAK,GAAGN,OAAO,CAACO,OAAO,CAACR,MAAM,CAAC;IAErC,IAAIO,KAAK,KAAK,CAAC,CAAC,EAAE;MAChBE,OAAO,CAACC,GAAG,CAAC,WAAWV,MAAM,mBAAmBO,KAAK,EAAE,CAAC;IAC1D,CAAC,MAAM;MACLE,OAAO,CAACC,GAAG,CAAC,WAAWV,MAAM,YAAY,CAAC;IAC5C;EACF;EACFT,SAAS,CAAC,MAAM,CAIhB,CAAC,EAAE,CAACM,KAAK,CAAC,CAAC;EAEb,oBACEH,OAAA;IAAAiB,QAAA,gBACEjB,OAAA;MAAAiB,QAAA,GAAI,SAAO,EAACd,KAAK;IAAA;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACvBrB,OAAA;MAAQsB,OAAO,EAAEA,CAAA,KAAMlB,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAE;MAAAc,QAAA,EAAC;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtE,CAAC;AAEV,CAAC;AAAAnB,EAAA,CA9BKD,YAAY;AAAAsB,EAAA,GAAZtB,YAAY;AAgClB,eAAeA,YAAY;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}