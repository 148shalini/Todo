{"ast":null,"code":"var _jsxFileName = \"D:\\\\reacttutorial\\\\todo\\\\src\\\\advanceHooks\\\\advanceHooks.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback, useMemo } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdvanceHooks = () => {\n  _s();\n  const [count, setCount] = useState(0);\n  const numbers = Array.from({\n    length: 100000000\n  }, (_, i) => i + 1);\n  // Memoize the function to avoid unnecessary re-creations\n  const increment = useCallback(() => {\n    setCount(prevCount => prevCount + 1);\n  }, []); // The empty array ensures the function is created once\n\n  // Memoize a derived value to avoid recalculating on each render\n  const expensiveCalculation = useMemo(() => {\n    console.log('Expensive calculation running...');\n    return count * 2; // Example of an expensive calculation\n  }, [count]); // Only recalculate if `count` changes\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Count: \", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Expensive Calculation: \", expensiveCalculation]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCount(count + 1),\n      children: \"Expensive Increment \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Counter, {\n      onIncrement: increment\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(AdvanceHooks, \"JjwvIipR1v2GMLHH9RZpq5DeDpQ=\");\n_c = AdvanceHooks;\nexport default AdvanceHooks;\nvar _c;\n$RefreshReg$(_c, \"AdvanceHooks\");","map":{"version":3,"names":["React","useState","useCallback","useMemo","jsxDEV","_jsxDEV","AdvanceHooks","_s","count","setCount","numbers","Array","from","length","_","i","increment","prevCount","expensiveCalculation","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","Counter","onIncrement","_c","$RefreshReg$"],"sources":["D:/reacttutorial/todo/src/advanceHooks/advanceHooks.jsx"],"sourcesContent":["import React, { useState, useCallback, useMemo } from 'react';\r\n\r\n\r\n  \r\nconst AdvanceHooks = () => {\r\n    const [count, setCount] = useState(0);\r\n    const numbers = Array.from({ length: 100_000_000 }, (_, i) => i + 1);\r\n  // Memoize the function to avoid unnecessary re-creations\r\n  const increment = useCallback(() => {\r\n    setCount(prevCount => prevCount + 1);\r\n  }, []);  // The empty array ensures the function is created once\r\n\r\n  // Memoize a derived value to avoid recalculating on each render\r\n  const expensiveCalculation = useMemo(() => {\r\n    console.log('Expensive calculation running...');\r\n    return count * 2;  // Example of an expensive calculation\r\n  }, [count]);  // Only recalculate if `count` changes\r\n\r\n  return (\r\n    <div>\r\n      <h1>Count: {count}</h1>\r\n      <h2>Expensive Calculation: {expensiveCalculation}</h2>\r\n      <button onClick={() => setCount(count + 1)}>Expensive Increment </button>\r\n      <Counter onIncrement={increment} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AdvanceHooks"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,WAAW,EAAEC,OAAO,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAI9D,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAMS,OAAO,GAAGC,KAAK,CAACC,IAAI,CAAC;IAAEC,MAAM,EAAE;EAAY,CAAC,EAAE,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,GAAG,CAAC,CAAC;EACtE;EACA,MAAMC,SAAS,GAAGd,WAAW,CAAC,MAAM;IAClCO,QAAQ,CAACQ,SAAS,IAAIA,SAAS,GAAG,CAAC,CAAC;EACtC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAE;;EAET;EACA,MAAMC,oBAAoB,GAAGf,OAAO,CAAC,MAAM;IACzCgB,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC;IAC/C,OAAOZ,KAAK,GAAG,CAAC,CAAC,CAAE;EACrB,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC,CAAC,CAAE;;EAEd,oBACEH,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MAAAgB,QAAA,GAAI,SAAO,EAACb,KAAK;IAAA;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACvBpB,OAAA;MAAAgB,QAAA,GAAI,yBAAuB,EAACH,oBAAoB;IAAA;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACtDpB,OAAA;MAAQqB,OAAO,EAAEA,CAAA,KAAMjB,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAE;MAAAa,QAAA,EAAC;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACzEpB,OAAA,CAACsB,OAAO;MAACC,WAAW,EAAEZ;IAAU;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChC,CAAC;AAEV,CAAC;AAAAlB,EAAA,CAtBKD,YAAY;AAAAuB,EAAA,GAAZvB,YAAY;AAwBlB,eAAeA,YAAY;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}