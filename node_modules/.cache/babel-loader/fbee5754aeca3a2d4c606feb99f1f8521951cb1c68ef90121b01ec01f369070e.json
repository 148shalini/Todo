{"ast":null,"code":"var _jsxFileName = \"D:\\\\reacttutorial\\\\todo\\\\src\\\\advanceHooks\\\\buttons.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Buttons = ({\n  count\n}) => {\n  _s();\n  useEffect(() => {}, [third]);\n\n  // const increment = () => {\n  //     setCount(count+1);\n  //     findElement();\n  // }\n\n  const numbers = Array.from({\n    length: 100000000\n  }, (_, i) => i + 1);\n\n  // const findElement = () => {\n\n  //     const target = 99999999;\n  //     // Use indexOf to find the element\n  //     const index = numbers.indexOf(target);\n\n  //     if (index !== -1) {\n  //       console.log(`Element ${target} found at index ${index}`);\n  //     } else {\n  //       console.log(`Element ${target} not found`);\n  //     }\n  //   }\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    children: \"Increment\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_s(Buttons, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Buttons;\nexport default _c2 = /*#__PURE__*/React.memo(Buttons);\nvar _c, _c2;\n$RefreshReg$(_c, \"Buttons\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Buttons","count","_s","useEffect","third","numbers","Array","from","length","_","i","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","_c2","memo","$RefreshReg$"],"sources":["D:/reacttutorial/todo/src/advanceHooks/buttons.jsx"],"sourcesContent":["import React from 'react'\r\n\r\nconst Buttons = ({count}) => {\r\n   useEffect(() => {\r\n     \r\n   }, [third])\r\n   \r\n    // const increment = () => {\r\n    //     setCount(count+1);\r\n    //     findElement();\r\n    // }\r\n\r\n    const numbers =  Array.from({ length: 100_000_000 }, (_, i) => i + 1)\r\n    \r\n        // const findElement = () => {\r\n    \r\n        //     const target = 99999999;\r\n        //     // Use indexOf to find the element\r\n        //     const index = numbers.indexOf(target);\r\n          \r\n        //     if (index !== -1) {\r\n        //       console.log(`Element ${target} found at index ${index}`);\r\n        //     } else {\r\n        //       console.log(`Element ${target} not found`);\r\n        //     }\r\n        //   }\r\n    \r\n    return (\r\n        <button>Increment</button>\r\n    )\r\n  }\r\n  \r\nexport default React.memo(Buttons);"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,OAAO,GAAGA,CAAC;EAACC;AAAK,CAAC,KAAK;EAAAC,EAAA;EAC1BC,SAAS,CAAC,MAAM,CAEhB,CAAC,EAAE,CAACC,KAAK,CAAC,CAAC;;EAEV;EACA;EACA;EACA;;EAEA,MAAMC,OAAO,GAAIC,KAAK,CAACC,IAAI,CAAC;IAAEC,MAAM,EAAE;EAAY,CAAC,EAAE,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,GAAG,CAAC,CAAC;;EAEjE;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEJ,oBACIX,OAAA;IAAAY,QAAA,EAAQ;EAAS;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC;AAEhC,CAAC;AAAAb,EAAA,CA5BGF,OAAO;AAAAgB,EAAA,GAAPhB,OAAO;AA8Bb,eAAAiB,GAAA,gBAAepB,KAAK,CAACqB,IAAI,CAAClB,OAAO,CAAC;AAAC,IAAAgB,EAAA,EAAAC,GAAA;AAAAE,YAAA,CAAAH,EAAA;AAAAG,YAAA,CAAAF,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}