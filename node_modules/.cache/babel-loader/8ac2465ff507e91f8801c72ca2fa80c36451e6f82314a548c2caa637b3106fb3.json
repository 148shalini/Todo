{"ast":null,"code":"var _jsxFileName = \"D:\\\\reacttutorial\\\\todo\\\\src\\\\advanceHooks\\\\advanceHooks.jsx\",\n  _s = $RefreshSig$();\nimport React, { useMemo, useState } from 'react';\nimport Buttons from './buttons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdvanceHooks = () => {\n  _s();\n  const [count, setCount] = useState(0);\n  const numbers = useMemo(() => Array.from({\n    length: 100000000\n  }, (_, i) => i + 1), []);\n  const decrement = () => {\n    setCount(count - 1);\n  };\n  const increment = () => {\n    setCount(count + 1);\n    findElement();\n  };\n  const findElement = () => {\n    const target = 99999999;\n    // Use indexOf to find the element\n    const index = numbers.indexOf(target);\n    if (index !== -1) {\n      console.log(`Element ${target} found at index ${index}`);\n    } else {\n      console.log(`Element ${target} not found`);\n    }\n  };\n  // Create array from 1 to 100,000,000\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Count: \", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: increment,\n      children: \"Increment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: decrement,\n      children: \"Decrement\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(AdvanceHooks, \"bWcpVZN5k4T+3PIBC10DEa4gtGA=\");\n_c = AdvanceHooks;\nexport default AdvanceHooks;\nvar _c;\n$RefreshReg$(_c, \"AdvanceHooks\");","map":{"version":3,"names":["React","useMemo","useState","Buttons","jsxDEV","_jsxDEV","AdvanceHooks","_s","count","setCount","numbers","Array","from","length","_","i","decrement","increment","findElement","target","index","indexOf","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["D:/reacttutorial/todo/src/advanceHooks/advanceHooks.jsx"],"sourcesContent":["import React, {  useMemo, useState} from 'react';\r\nimport Buttons from './buttons';\r\n\r\nconst AdvanceHooks = () => {\r\n\r\n    const [count, setCount] = useState(0);\r\n    const numbers =  useMemo(()=>Array.from({ length: 100_000_000 }, (_, i) => i + 1),[]);\r\n    const decrement=() => {\r\n        setCount(count-1);\r\n    }\r\nconst increment = () => {\r\n        setCount(count+1);\r\n        findElement();\r\n    }\r\n    const findElement = () => {\r\n    \r\n                    const target = 99999999;\r\n                    // Use indexOf to find the element\r\n                    const index = numbers.indexOf(target);\r\n                  \r\n                    if (index !== -1) {\r\n                      console.log(`Element ${target} found at index ${index}`);\r\n                    } else {\r\n                      console.log(`Element ${target} not found`);\r\n                    }\r\n                  }\r\n// Create array from 1 to 100,000,000\r\n\r\n    \r\n  return (\r\n    <div>\r\n      <h1>Count: {count}</h1>\r\n      {/* <Buttons /> */}\r\n      <button onClick={increment}>Increment</button>\r\n      <button onClick={decrement}>Decrement</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AdvanceHooks"],"mappings":";;AAAA,OAAOA,KAAK,IAAKC,OAAO,EAAEC,QAAQ,QAAO,OAAO;AAChD,OAAOC,OAAO,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEvB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAMQ,OAAO,GAAIT,OAAO,CAAC,MAAIU,KAAK,CAACC,IAAI,CAAC;IAAEC,MAAM,EAAE;EAAY,CAAC,EAAE,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,GAAG,CAAC,CAAC,EAAC,EAAE,CAAC;EACrF,MAAMC,SAAS,GAACA,CAAA,KAAM;IAClBP,QAAQ,CAACD,KAAK,GAAC,CAAC,CAAC;EACrB,CAAC;EACL,MAAMS,SAAS,GAAGA,CAAA,KAAM;IAChBR,QAAQ,CAACD,KAAK,GAAC,CAAC,CAAC;IACjBU,WAAW,CAAC,CAAC;EACjB,CAAC;EACD,MAAMA,WAAW,GAAGA,CAAA,KAAM;IAEV,MAAMC,MAAM,GAAG,QAAQ;IACvB;IACA,MAAMC,KAAK,GAAGV,OAAO,CAACW,OAAO,CAACF,MAAM,CAAC;IAErC,IAAIC,KAAK,KAAK,CAAC,CAAC,EAAE;MAChBE,OAAO,CAACC,GAAG,CAAC,WAAWJ,MAAM,mBAAmBC,KAAK,EAAE,CAAC;IAC1D,CAAC,MAAM;MACLE,OAAO,CAACC,GAAG,CAAC,WAAWJ,MAAM,YAAY,CAAC;IAC5C;EACF,CAAC;EACnB;;EAGE,oBACEd,OAAA;IAAAmB,QAAA,gBACEnB,OAAA;MAAAmB,QAAA,GAAI,SAAO,EAAChB,KAAK;IAAA;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAEvBvB,OAAA;MAAQwB,OAAO,EAAEZ,SAAU;MAAAO,QAAA,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC9CvB,OAAA;MAAQwB,OAAO,EAAEb,SAAU;MAAAQ,QAAA,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3C,CAAC;AAEV,CAAC;AAAArB,EAAA,CAlCKD,YAAY;AAAAwB,EAAA,GAAZxB,YAAY;AAoClB,eAAeA,YAAY;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}