{"ast":null,"code":"var _jsxFileName = \"D:\\\\reacttutorial\\\\todo\\\\src\\\\pocketNotes\\\\layout.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Sidebar from './component/sidebar'; // your reusable Sidebar component\nimport Home from './pages/home';\nimport GroupChat from './pages/groupChat';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Layout = () => {\n  _s();\n  const [groups, setGroups] = useState([]);\n  // const [selectedGroup, setSelectedGroup] = useState({});\n  const [selectedGroup, setSelectedGroup] = useState(null);\n  const [groupMessages, setGroupMessages] = useState({}); // stores messages per group\n  useEffect(() => {\n    localStorage.setItem('groups');\n  });\n  const handleSendMessage = (groupId, messageText) => {\n    const formatDate = date => {\n      const day = date.getDate();\n      const month = date.toLocaleString('default', {\n        month: 'long'\n      });\n      const year = date.getFullYear();\n      const time = date.toLocaleTimeString([], {\n        hour: '2-digit',\n        minute: '2-digit',\n        hour12: true\n      });\n      return `${day} ${month} ${year} . ${time}`;\n    };\n    const newMessage = {\n      text: messageText,\n      timestamp: formatDate(new Date())\n    };\n    setGroupMessages(prev => ({\n      ...prev,\n      [groupId]: [...(prev[groupId] || []), newMessage]\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex h-screen w-screen\",\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      groups: groups,\n      setGroups: setGroups,\n      setSelectedGroup: setSelectedGroup\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: selectedGroup ? /*#__PURE__*/_jsxDEV(GroupChat, {\n        group: selectedGroup,\n        messages: groupMessages[selectedGroup.id] || [],\n        onSendMessage: message => handleSendMessage(selectedGroup.id, message)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(Layout, \"1zhDJxog05zRIjRsUr/KDDR4PFM=\");\n_c = Layout;\nexport default Layout;\nvar _c;\n$RefreshReg$(_c, \"Layout\");","map":{"version":3,"names":["React","useEffect","useState","Sidebar","Home","GroupChat","jsxDEV","_jsxDEV","Fragment","_Fragment","Layout","_s","groups","setGroups","selectedGroup","setSelectedGroup","groupMessages","setGroupMessages","localStorage","setItem","handleSendMessage","groupId","messageText","formatDate","date","day","getDate","month","toLocaleString","year","getFullYear","time","toLocaleTimeString","hour","minute","hour12","newMessage","text","timestamp","Date","prev","className","children","fileName","_jsxFileName","lineNumber","columnNumber","group","messages","id","onSendMessage","message","_c","$RefreshReg$"],"sources":["D:/reacttutorial/todo/src/pocketNotes/layout.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Sidebar from './component/sidebar';// your reusable Sidebar component\r\nimport Home from './pages/home';\r\nimport GroupChat from './pages/groupChat';\r\n\r\nconst Layout = () => {\r\n    const [groups, setGroups] = useState([]);\r\n    // const [selectedGroup, setSelectedGroup] = useState({});\r\n    const [selectedGroup, setSelectedGroup] = useState(null);\r\n    const [groupMessages, setGroupMessages] = useState({}); // stores messages per group\r\n    useEffect(()=>{\r\n      localStorage.setItem('groups',)\r\n    })\r\n    const handleSendMessage = (groupId, messageText) => {\r\n      const formatDate = (date) => {\r\n        const day = date.getDate();\r\n        const month = date.toLocaleString('default', { month: 'long' });\r\n        const year = date.getFullYear();\r\n        const time = date.toLocaleTimeString([], {\r\n          hour: '2-digit',\r\n          minute: '2-digit',\r\n          hour12: true,\r\n        });\r\n        return `${day} ${month} ${year} . ${time}`;\r\n      };\r\n      const newMessage = {\r\n        text: messageText,\r\n        timestamp: formatDate(new Date()) \r\n      };\r\n    \r\n      setGroupMessages((prev) => ({\r\n        ...prev,\r\n        [groupId]: [...(prev[groupId] || []), newMessage],\r\n      }));\r\n    };\r\n    \r\n    \r\n    return (\r\n    <div className='flex h-screen w-screen'>\r\n      <Sidebar groups={groups} setGroups={setGroups} setSelectedGroup={setSelectedGroup}/>\r\n    \r\n       <>\r\n        {selectedGroup ? (\r\n          <GroupChat\r\n            group={selectedGroup}\r\n            messages={groupMessages[selectedGroup.id] || []}\r\n            onSendMessage={(message) => handleSendMessage(selectedGroup.id,message)}\r\n          />\r\n        ) : (\r\n          <Home />\r\n        )}\r\n      </>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}